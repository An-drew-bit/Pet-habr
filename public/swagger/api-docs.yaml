openapi: 3.0.3
info:
  title: REST API Pet-habr
  version: "1.0.0"
paths:
# -------------------------------- AUTH --------------------------------
  /api/auth/registered:
    post:
      tags: [ 'Auth' ]
      description: Registred user
      parameters:
        - name: nickName
          in: query
          description: User nick_name
          required: true
          schema:
            type: string
            example: Jhon
        - name: email
          in: query
          description: Email address
          required: true
          schema:
            type: string
            example: 'user@example.com'
        - name: password
          in: query
          description: User password
          required: true
          schema:
            type: string
            example: 'Some password'
        - name: password_confirmation
          in: query
          description: Repeat password
          required: true
          schema:
            type: string
            example: 'Repeat your password'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  access_token:
                    type: string
                    example: '1|aseefbb&3112sd,frkrr2'
                  token_type:
                    type: string
                    example: 'Bearer'

  /api/auth/login:
    post:
      tags: [ 'Auth' ]
      description: Authentication user
      parameters:
        - name: email
          in: query
          description: Email address
          required: true
          schema:
            type: string
            example: 'user@example.com'
        - name: password
          in: query
          description: User password
          required: true
          schema:
            type: string
            example: some string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  access_token:
                    type: string
                    example: '1|aseefbb&3112sd,frkrr2'
                  token_type:
                    type: string
                    example: 'Bearer'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  email:
                    type: string
                    example: 'Неверное имя пользователя или пароль.'

  /api/auth/logout:
    post:
      tags: [ 'Auth' ]
      description: Logout user
      parameters:
        - name: access_token
          in: header
          description: Users access_token
          required: true
          schema:
            type: string
            example: '1|aseefbb&3112sd,frkrr2'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'Вы вышли'

# -------------------------------- USER --------------------------------
  /api/user/info:
    post:
      tags: [ 'User' ]
      description: Get current user data
      parameters:
        - name: access_token
          in: header
          description: Users access_token
          required: true
          schema:
            type: string
            example: '1|aseefbb&3112sd,frkrr2'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    example: 1
                  nickName:
                    type: string
                    example: 'Jhon'
                  firstName:
                    type: string
                    example: 'Jnon'
                  lastName:
                    type: string
                    example: 'Doe'
                  sex:
                    type: string
                    example: 'Male'
                  description:
                    type: string
                    example: 'Developer'
                  avatar:
                    type: string
                    example: 'jhon_doe.jpg'
                  roles:
                    type: string
                    example: User
                  email:
                    type: string
                    example: 'user@example.com'
                  banned:
                    type: boolean
                    example: false
        404:
          description: Not found
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'Not found'
